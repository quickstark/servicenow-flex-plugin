import { DetailedAssignment, Assignment } from "./assignments.types";
declare type UndonePayload = {
    reversedAssignment: DetailedAssignment;
    newAssignment: DetailedAssignment;
};
export declare const getAssignmentsPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"assignments/get/pending">;
export declare const getAssignmentsFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<Assignment[], "assignments/get/fulfilled">;
export declare const getOneAssignmentPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"assignment/get/pending">;
export declare const getOneAssignmentFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<DetailedAssignment, "assignment/get/fulfilled">;
export declare const undoPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"assignment/undo/pending">;
export declare const undoFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<UndonePayload, "assignment/undo/fulfilled">;
export declare const createAssignmentPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"assignment/create/pending">;
export declare const createAssignmentFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<DetailedAssignment, "assignment/create/fulfilled">;
export declare const clearActiveAssignment: import("../../utils/createAction").ActionCreatorWithoutPayload<"assignment/clear/active">;
export declare type AssignmentsActions = ReturnType<typeof getAssignmentsPending> | ReturnType<typeof getAssignmentsFulfilled> | ReturnType<typeof getOneAssignmentPending> | ReturnType<typeof getOneAssignmentFulfilled> | ReturnType<typeof undoPending> | ReturnType<typeof undoFulfilled> | ReturnType<typeof createAssignmentPending> | ReturnType<typeof createAssignmentFulfilled> | ReturnType<typeof clearActiveAssignment>;
export {};
