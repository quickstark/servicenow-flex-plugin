import { QueueWorker } from "./workers.types";
export declare const getQueueWorkersPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"queueWorkers/get/pending">;
export declare const getQueueWorkersFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<QueueWorker[], "queueWorkers/get/fulfilled">;
export declare const getEligibleWorkersPending: import("../../utils/createAction").ActionCreatorWithoutPayload<"eligibleWorkers/get/pending">;
export declare const getEligibleWorkerFulfilled: import("../../utils/createAction").ActionCreatorWithOptionalPayload<QueueWorker[], "eligibleWorkers/get/fulfilled">;
export declare const getEligibleWorkerReset: import("../../utils/createAction").ActionCreatorWithoutPayload<"eligibleWorkers/get/reset">;
export declare const setQueueWorkersFilter: import("../../utils/createAction").ActionCreatorWithNonInferrablePayload<"queueWorkers/update/filters">;
export declare const setEligibleWorkerFilter: import("../../utils/createAction").ActionCreatorWithNonInferrablePayload<"eligibleWorkers/update/filters">;
export declare const resetWorkerState: import("../../utils/createAction").ActionCreatorWithoutPayload<"workers/reset">;
export declare type WorkersActions = ReturnType<typeof getQueueWorkersPending> | ReturnType<typeof getQueueWorkersFulfilled> | ReturnType<typeof getEligibleWorkersPending> | ReturnType<typeof getEligibleWorkerFulfilled> | ReturnType<typeof setQueueWorkersFilter> | ReturnType<typeof setEligibleWorkerFilter> | ReturnType<typeof getEligibleWorkerReset> | ReturnType<typeof resetWorkerState>;
