import * as React from "react";
import { RouteComponentProps } from "react-router-dom";
import { AppState } from "../../../../state";
import { Match } from "../QueuesViewTypes";
declare function mapStateToProps(state: AppState, ownProps: NonReduxProps): {
    queues: {
        [key: string]: import("../../../queuesStats").WorkerQueue;
    };
    queue: import("../../../../state/QueueManagementState/slices/queues/queues.types").Queue;
    isLoaded: boolean;
    hasAssignment: boolean;
    error: import("../../../../state/QueueManagementState/slices/errors/errors.types").QueueManagementError;
};
declare type DecoratedProps = {
    onTabChange: (tabValue: number) => void;
};
declare type NonReduxProps = RouteComponentProps<Match>;
declare type ReduxStateProps = ReturnType<typeof mapStateToProps>;
declare type ContainerProps = ReduxStateProps & NonReduxProps;
declare type ContainerState = {
    tabValue: number;
};
export declare type WrappedComponentProps = ContainerProps & ContainerState & DecoratedProps;
export declare function withQueueDetail(Component: React.ComponentType<WrappedComponentProps>): React.ComponentType;
export {};
