import * as React from "react";
import { QueuesConfig } from "../../../state/QueuesState/QueuesStateTypes";
interface Queue {
    sid: string;
    friendly_name: string;
}
interface Channel {
    sid: string;
    unique_name: string;
    friendly_name: string;
}
interface SLAQueuesListOwnProps {
    onEditQueue: (sid: string) => void;
}
interface SLAQueuesListStateProps {
    queueConfigurations: QueuesConfig["queue_configurations"];
    channelConfigurations: QueuesConfig["queue_channel_configurations"];
    hasFetched: boolean;
    queues: Queue[];
    channelsBySid: {
        [channel_sid: string]: Channel;
    };
    channelSids: string[];
    error: Error | null;
}
declare type SLAQueuesListProps = SLAQueuesListStateProps & SLAQueuesListOwnProps;
export declare class SLAQueuesListImpl extends React.Component<SLAQueuesListProps> {
    constructor(props: SLAQueuesListProps);
    renderDailyMetricsReset(sid: string, friendly_name: string): JSX.Element;
    renderChannelServiceLevels(sid: string, friendly_name: string): JSX.Element;
    handleRowClick: (q: Queue) => void;
    render(): JSX.Element;
}
export declare const SLAQueuesList: import("react-redux").ComponentClass<Pick<SLAQueuesListProps, "onEditQueue">> & {
    WrappedComponent: React.ComponentType<SLAQueuesListProps>;
};
export {};
