import * as React from "react";
import { InsightsMetric } from "../../../models/InsightsModel";
export interface IframeControllerRenderProps {
    refFn: React.Ref<HTMLIFrameElement>;
}
interface IframeControllerOwnProps {
    children: (props: IframeControllerRenderProps) => React.ReactNode;
}
interface IframeControllerStateProps {
    metrics: InsightsMetric[];
}
declare type IframeControllerProps = IframeControllerOwnProps & IframeControllerStateProps;
export declare class _IframeController extends React.PureComponent<IframeControllerProps> {
    private iframe;
    private gdEventHandlers;
    constructor(props: IframeControllerProps);
    private handle;
    private handler_listeningForDrillableItems;
    private handler_uiLink;
    private delegateEventToOriginal;
    private handleIncomingMessage;
    componentDidMount(): void;
    componentWillUnmount(): void;
    ref: (r: HTMLIFrameElement | null) => void;
    render(): React.ReactNode;
}
export declare const IframeController: import("react-redux").ComponentClass<Pick<IframeControllerProps, "children">> & {
    WrappedComponent: React.ComponentType<IframeControllerProps>;
};
export {};
