import * as React from "react";
import { WrappedComponentProps } from "./Connector";
import { WorkerFilter, QueueWorker } from "../../../state/QueueManagementState/slices/workers/workers.types";
interface QueueTableImplState {
    offsetTop: number;
}
declare class QueueTableImpl extends React.PureComponent<WrappedComponentProps, QueueTableImplState> {
    state: {
        offsetTop: number;
    };
    componentDidMount(): void;
    componentDidUpdate(): void;
    get offsetTop(): DOMRect | {
        height: number;
    };
    get selector(): "#filter-section" | "#sticky-header";
    get isSelectAllChecked(): boolean;
    get isLoading(): boolean;
    get isEmpty(): boolean;
    get hasError(): boolean;
    get max(): number;
    get emptyRows(): number;
    onRowClick: (worker: QueueWorker) => void;
    onSelectAllClick: (e: React.FormEvent<HTMLElement>, checked: boolean) => void;
    onSortRequest: (orderBy: WorkerFilter["orderBy"]) => (e: React.MouseEvent<HTMLElement>) => void;
    render(): JSX.Element;
}
declare const ConnectedQueueTable: import("react-redux").ComponentClass<Pick<WrappedComponentProps, "withSelection" | "selectedSids" | "onSetSelected"> & {
    withSelection?: boolean;
    onSetSelected?: (selectedSids: string[]) => void;
    selectedSids?: Set<string>;
}> & {
    WrappedComponent: React.ComponentType<WrappedComponentProps>;
};
export { QueueTableImpl, ConnectedQueueTable };
