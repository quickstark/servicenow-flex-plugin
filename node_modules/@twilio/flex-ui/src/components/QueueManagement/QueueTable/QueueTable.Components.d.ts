/// <reference types="react" />
interface TableHeaderRowProps {
    active?: boolean;
    space?: boolean;
}
export declare const Container: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../theme").Theme>;
export declare const Table: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("@material-ui/core/Table").TableProps, import("../../theme").Theme>;
export declare const TableHeaderRow: import("@twilio/flex-ui-core").StyledOtherComponent<TableHeaderRowProps, import("@material-ui/core/TableRow").TableRowProps, import("../../theme").Theme>;
interface TableRowProps {
    active?: boolean;
    space?: boolean;
    isLast?: boolean;
}
export declare const TableRow: import("@twilio/flex-ui-core").StyledOtherComponent<TableRowProps, import("@material-ui/core/TableRow").TableRowProps, import("../../theme").Theme>;
interface TableCellProps {
    empty?: boolean;
}
export declare const TableCell: import("@twilio/flex-ui-core").StyledOtherComponent<TableCellProps, import("@material-ui/core/TableCell").TableCellProps, import("../../theme").Theme>;
export declare const TableHeaderCell: import("@twilio/flex-ui-core").StyledOtherComponent<TableCellProps, import("create-emotion-styled/types/common").StyledOtherProps<TableCellProps & import("@material-ui/core/TableCell").TableCellProps, import("../../theme").Theme, import("react").Ref<any>>, import("../../theme").Theme>;
export declare const TableCellHeaderCheckbox: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("create-emotion-styled/types/common").StyledOtherProps<TableCellProps & import("@material-ui/core/TableCell").TableCellProps, import("../../theme").Theme, import("react").Ref<any>>, import("../../theme").Theme>;
export declare const TableCellCheckbox: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("create-emotion-styled/types/common").StyledOtherProps<TableCellProps & import("@material-ui/core/TableCell").TableCellProps, import("../../theme").Theme, import("react").Ref<any>>, import("../../theme").Theme>;
export declare const Center: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../theme").Theme>;
export declare const EmptyIcon: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("@twilio/flex-ui-core").IconProps, import("../../theme").Theme>;
export declare const Text: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, import("../../theme").Theme>;
interface DotProps {
    activityName: "Unavailable" | "Offline" | "Available" | string;
}
export declare const Dot: import("@twilio/flex-ui-core").StyledOtherComponent<DotProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, import("../../theme").Theme>;
export declare const AssignedBadge: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, import("../../theme").Theme>;
export declare const classes: {
    icon: string;
};
export {};
