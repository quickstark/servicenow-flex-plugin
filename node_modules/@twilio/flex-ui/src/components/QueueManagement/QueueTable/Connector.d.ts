import * as React from "react";
import { AppState } from "../../../state";
import { WorkerFilter } from "../../../state/QueueManagementState/slices/workers/workers.types";
declare type setFilter = (filter: Partial<WorkerFilter>) => void;
declare function mapStateToProps(state: AppState, ownProps: OwnProps): {
    isSearching: boolean;
    workers: import("../../../state/QueueManagementState/slices/workers/workers.types").QueueWorker[];
    pageSize: number;
    orderBy: "computedFullName" | "activityName";
    orderDirection: "desc" | "asc";
    isLoading: boolean;
    isQueueLoading: boolean;
    error: import("../../../state/QueueManagementState/slices/errors/errors.types").QueueManagementError;
    setFilter: setFilter;
};
declare type OwnProps = {
    withSelection?: boolean;
    onSetSelected?: (selectedSids: string[]) => void;
    selectedSids?: Set<string>;
};
declare type ReduxStateProps = ReturnType<typeof mapStateToProps>;
export declare type WrappedComponentProps = OwnProps & ReduxStateProps;
export declare const withQueueTable: (Component: React.ComponentType<WrappedComponentProps>) => import("react-redux").ComponentClass<Pick<WrappedComponentProps, "withSelection" | "selectedSids" | "onSetSelected"> & OwnProps> & {
    WrappedComponent: React.ComponentType<WrappedComponentProps>;
};
export {};
