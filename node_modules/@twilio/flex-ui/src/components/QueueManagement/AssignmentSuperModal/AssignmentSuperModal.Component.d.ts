/// <reference types="react" />
import { Theme } from "../../theme";
export declare const AssignmentContentContainer: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, Theme>;
export declare const ButtonContainer: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const paper: (theme: Theme) => string;
export declare const DialogContent: import("create-emotion-styled").StyledOtherComponent<object, import("create-emotion-styled/types/common").StyledOtherProps<object & import("@material-ui/core/DialogContent").DialogContentProps, Theme, import("react").Ref<any>>, Theme>;
export declare const DialogActions: import("create-emotion-styled").StyledOtherComponent<object, import("create-emotion-styled/types/common").StyledOtherProps<object & import("@material-ui/core/DialogActions").DialogActionsProps, Theme, import("react").Ref<any>>, Theme>;
export declare const DialogHeader: import("create-emotion-styled").StyledStatelessComponent<object, import("../Dialog/DialogHeader/DialogHeader").DialogHeaderProps, Theme>;
export declare const DialogTitle: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, Theme>;
export declare const DialogHeaderInner: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const RequiredSkills: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, Theme>;
export declare const Bold: import("create-emotion-styled").StyledOtherComponent<object, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, Theme>;
export declare const classes: {
    paper: (theme: Theme) => string;
};
