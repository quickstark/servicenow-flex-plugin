import * as React from "react";
import { RouteComponentProps } from "react-router-dom";
import { AppState } from "../../../state";
import { DetailedAssignment } from "../../../state/QueueManagementState/slices/assignments/assignments.types";
import { Match } from "../../view/QueuesView/QueuesViewTypes";
declare function mapStateToProps(state: AppState): {
    assignment: DetailedAssignment;
    queue: import("../../queuesStats").WorkerQueue | {
        friendly_name: string;
    };
    assigned: string[];
    skipped: string[];
    failed: {
        name: string;
        reason: string;
    }[];
    count: number;
    assignmentType: import("../../../state/QueueManagementState/slices/assignments/assignments.types").AssignmentType;
};
declare type OwnProps = {
    queueSid: string;
};
declare type ReduxStateProps = ReturnType<typeof mapStateToProps>;
declare type NonReduxProps = RouteComponentProps<Match>;
declare type DecoratedProps = {
    toggleMetaDialog: () => void;
};
declare type ConnectorState = {
    isMetaDialogOpen: boolean;
};
export declare type WrappedComponentProps = ReduxStateProps & NonReduxProps & DecoratedProps & ConnectorState & OwnProps;
declare function withSuccessBanner(Component: React.ComponentType<WrappedComponentProps>): React.ComponentClass<Pick<NonReduxProps, never>, any>;
export { withSuccessBanner };
