import * as React from "react";
import { ThemeProps } from "../../theme";
import { AppState } from "../../../state";
import { Match } from "../../view/QueuesView/QueuesViewTypes";
import { RouteComponentProps } from "react-router-dom";
declare type OwnProps = {
    open: boolean;
    assignmentSid?: string;
    queueSid: string;
};
declare type DecoratedProps = {
    handleTabChange: (e: React.MouseEvent<HTMLElement>, tab: number) => void;
    toggleUndoDialog: () => void;
};
declare type NonReduxProps = OwnProps & RouteComponentProps<Match>;
declare type ReduxStateProps = ReturnType<typeof mapStateToProps>;
declare type ContainerProps = NonReduxProps & ReduxStateProps & ThemeProps;
declare type ContainerState = {
    tab: number;
    isLoading: boolean;
    isUndoDialogOpen: boolean;
    offsetTop: number;
};
export declare type WrappedComponentProps = ContainerProps & ContainerState & DecoratedProps;
declare function mapStateToProps(state: AppState, ownProps: NonReduxProps): {
    assignment: import("../../../state/QueueManagementState/slices/assignments/assignments.types").DetailedAssignment;
    queue: import("../../queuesStats").WorkerQueue | {
        friendly_name: string;
    };
    assigned: string[];
    count: number;
    assignmentType: string;
};
declare function withAssignmentDrawer(Component: React.ComponentType<WrappedComponentProps>): React.ComponentType<OwnProps>;
export { withAssignmentDrawer };
